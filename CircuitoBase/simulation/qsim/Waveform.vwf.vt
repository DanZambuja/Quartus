// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/07/2017 09:12:43"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Media
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Media_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clock;
reg enable;
reg fimRodada;
reg finalizaRodada;
reg inicio;
reg [15:0] pulso;
reg reset;
reg vacilou;
// wires                                               
wire [15:0] depuraMedia;
wire [3:0] estadoJogada;
wire fimJogada;
wire [15:0] media;
wire perde;
wire rodada;

// assign statements (if any)                          
Media i1 (
// port map - connection between master ports and signals/registers   
	.clock(clock),
	.depuraMedia(depuraMedia),
	.enable(enable),
	.estadoJogada(estadoJogada),
	.fimJogada(fimJogada),
	.fimRodada(fimRodada),
	.finalizaRodada(finalizaRodada),
	.inicio(inicio),
	.media(media),
	.perde(perde),
	.pulso(pulso),
	.reset(reset),
	.rodada(rodada),
	.vacilou(vacilou)
);
initial 
begin 
#2000000 $finish;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #5000 1'b1;
	#5000;
end 

// enable
initial
begin
	enable = 1'b0;
	enable = #40000 1'b1;
	enable = #10000 1'b0;
	enable = #40000 1'b1;
	enable = #10000 1'b0;
	enable = #30000 1'b1;
	enable = #10000 1'b0;
	enable = #30000 1'b1;
	enable = #10000 1'b0;
	enable = #370000 1'b1;
	enable = #10000 1'b0;
	enable = #150000 1'b1;
	enable = #10000 1'b0;
	enable = #20000 1'b1;
	enable = #10000 1'b0;
	enable = #20000 1'b1;
	enable = #10000 1'b0;
	enable = #20000 1'b1;
	enable = #10000 1'b0;
end 

// fimRodada
initial
begin
	fimRodada = 1'b0;
	fimRodada = #50000 1'b1;
	fimRodada = #30000 1'b0;
	fimRodada = #20000 1'b1;
	fimRodada = #20000 1'b0;
	fimRodada = #20000 1'b1;
	fimRodada = #20000 1'b0;
	fimRodada = #20000 1'b1;
	fimRodada = #20000 1'b0;
	fimRodada = #300000 1'b1;
	fimRodada = #20000 1'b0;
	fimRodada = #50000 1'b1;
	fimRodada = #10000 1'b0;
	fimRodada = #50000 1'b1;
	fimRodada = #10000 1'b0;
	fimRodada = #80000 1'b1;
	fimRodada = #10000 1'b0;
	fimRodada = #20000 1'b1;
	fimRodada = #10000 1'b0;
	fimRodada = #20000 1'b1;
	fimRodada = #10000 1'b0;
	fimRodada = #20000 1'b1;
	fimRodada = #10000 1'b0;
end 

// finalizaRodada
initial
begin
	finalizaRodada = 1'b0;
	finalizaRodada = #70000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #30000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #30000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #30000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #300000 1'b1;
	finalizaRodada = #20000 1'b0;
	finalizaRodada = #50000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #50000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #80000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #20000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #20000 1'b1;
	finalizaRodada = #10000 1'b0;
	finalizaRodada = #20000 1'b1;
	finalizaRodada = #10000 1'b0;
end 

// inicio
initial
begin
	inicio = 1'b0;
	inicio = #10000 1'b1;
	inicio = #46000 1'b0;
	inicio = #484000 1'b1;
	inicio = #10000 1'b0;
	inicio = #150000 1'b1;
	inicio = #10000 1'b0;
	inicio = #610000 1'b1;
	inicio = #20000 1'b0;
end 
// pulso[ 15 ]
initial
begin
	pulso[15] = 1'b0;
end 
// pulso[ 14 ]
initial
begin
	pulso[14] = 1'b0;
end 
// pulso[ 13 ]
initial
begin
	pulso[13] = 1'b0;
end 
// pulso[ 12 ]
initial
begin
	pulso[12] = 1'b0;
end 
// pulso[ 11 ]
initial
begin
	pulso[11] = 1'b1;
end 
// pulso[ 10 ]
initial
begin
	pulso[10] = 1'b0;
end 
// pulso[ 9 ]
initial
begin
	pulso[9] = 1'b0;
end 
// pulso[ 8 ]
initial
begin
	pulso[8] = 1'b1;
end 
// pulso[ 7 ]
initial
begin
	pulso[7] = 1'b0;
end 
// pulso[ 6 ]
initial
begin
	pulso[6] = 1'b0;
end 
// pulso[ 5 ]
initial
begin
	pulso[5] = 1'b0;
end 
// pulso[ 4 ]
initial
begin
	pulso[4] = 1'b0;
end 
// pulso[ 3 ]
initial
begin
	pulso[3] = 1'b1;
end 
// pulso[ 2 ]
initial
begin
	pulso[2] = 1'b0;
end 
// pulso[ 1 ]
initial
begin
	pulso[1] = 1'b0;
end 
// pulso[ 0 ]
initial
begin
	pulso[0] = 1'b1;
end 

// reset
initial
begin
	reset = 1'b0;
	reset = #1260000 1'b1;
	reset = #20000 1'b0;
end 

// vacilou
initial
begin
	vacilou = 1'b0;
	vacilou = #600000 1'b1;
	vacilou = #10000 1'b0;
	vacilou = #830000 1'b1;
	vacilou = #20000 1'b0;
end 
endmodule

