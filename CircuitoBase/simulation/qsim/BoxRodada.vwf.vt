// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/06/2017 10:55:41"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          BoxRodada
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module BoxRodada_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clock;
reg finalizaRodada;
reg reset;
reg resposta;
reg rodada;
// wires                                               
wire aguardando;
wire contaAtraso;
wire demora;
wire erro;
wire [3:0] estadoAtrasador;
wire [3:0] estadoRodada;
wire fimHierarquico;
wire fimRodada;
wire MostraContaAtraso;
wire MostraSinalAtraso;
wire [15:0] pulso;

// assign statements (if any)                          
BoxRodada i1 (
// port map - connection between master ports and signals/registers   
	.aguardando(aguardando),
	.clock(clock),
	.contaAtraso(contaAtraso),
	.demora(demora),
	.erro(erro),
	.estadoAtrasador(estadoAtrasador),
	.estadoRodada(estadoRodada),
	.fimHierarquico(fimHierarquico),
	.fimRodada(fimRodada),
	.finalizaRodada(finalizaRodada),
	.MostraContaAtraso(MostraContaAtraso),
	.MostraSinalAtraso(MostraSinalAtraso),
	.pulso(pulso),
	.reset(reset),
	.resposta(resposta),
	.rodada(rodada)
);
initial 
begin 
#25000000 $finish;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #500 1'b1;
	#500;
end 

// finalizaRodada
initial
begin
	finalizaRodada = 1'b0;
	finalizaRodada = #9920000 1'b1;
	finalizaRodada = #320000 1'b0;
end 

// reset
initial
begin
	reset = 1'b1;
	reset = #320000 1'b0;
end 

// resposta
initial
begin
	resposta = 1'b0;
	resposta = #9600000 1'b1;
	resposta = #320000 1'b0;
	resposta = #12160000 1'b1;
	resposta = #640000 1'b0;
end 

// rodada
initial
begin
	rodada = 1'b0;
	rodada = #1280000 1'b1;
	rodada = #1600000 1'b0;
	rodada = #7360000 1'b1;
	rodada = #320000 1'b0;
end 
endmodule

